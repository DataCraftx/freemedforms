#############################################################################
# Makefile for building: libs
# Generated by qmake (2.01a) (Qt 4.5.3) on: mar. févr. 9 13:55:11 2010
# Project:  libs.pro
# Template: subdirs
# Command: /usr/bin/qmake-qt4 -unix -config debug -o Makefile libs.pro
#############################################################################

first: make_default
MAKEFILE      = Makefile
QMAKE         = /usr/bin/qmake-qt4
DEL_FILE      = rm -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
COPY          = cp -f
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_PROGRAM = install -m 755 -p
INSTALL_DIR   = $(COPY_DIR)
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
SUBTARGETS    =  \
		sub-translationutils \
		sub-medicalutils \
		sub-aggregation \
		sub-extensionsystem \
		sub-utils

translationutils//$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) translationutils/ || $(MKDIR) translationutils/ 
	cd translationutils/ && $(QMAKE) translationutils.pro -unix -config debug -o $(MAKEFILE)
sub-translationutils-qmake_all:  FORCE
	@$(CHK_DIR_EXISTS) translationutils/ || $(MKDIR) translationutils/ 
	cd translationutils/ && $(QMAKE) translationutils.pro -unix -config debug -o $(MAKEFILE)
sub-translationutils: translationutils//$(MAKEFILE) FORCE
	cd translationutils/ && $(MAKE) -f $(MAKEFILE)
sub-translationutils-make_default-ordered: translationutils//$(MAKEFILE) FORCE
	cd translationutils/ && $(MAKE) -f $(MAKEFILE) 
sub-translationutils-make_default: translationutils//$(MAKEFILE) FORCE
	cd translationutils/ && $(MAKE) -f $(MAKEFILE) 
sub-translationutils-make_first-ordered: translationutils//$(MAKEFILE) FORCE
	cd translationutils/ && $(MAKE) -f $(MAKEFILE) first
sub-translationutils-make_first: translationutils//$(MAKEFILE) FORCE
	cd translationutils/ && $(MAKE) -f $(MAKEFILE) first
sub-translationutils-all-ordered: translationutils//$(MAKEFILE) FORCE
	cd translationutils/ && $(MAKE) -f $(MAKEFILE) all
sub-translationutils-all: translationutils//$(MAKEFILE) FORCE
	cd translationutils/ && $(MAKE) -f $(MAKEFILE) all
sub-translationutils-clean-ordered: translationutils//$(MAKEFILE) FORCE
	cd translationutils/ && $(MAKE) -f $(MAKEFILE) clean
sub-translationutils-clean: translationutils//$(MAKEFILE) FORCE
	cd translationutils/ && $(MAKE) -f $(MAKEFILE) clean
sub-translationutils-distclean-ordered: translationutils//$(MAKEFILE) FORCE
	cd translationutils/ && $(MAKE) -f $(MAKEFILE) distclean
sub-translationutils-distclean: translationutils//$(MAKEFILE) FORCE
	cd translationutils/ && $(MAKE) -f $(MAKEFILE) distclean
sub-translationutils-install_subtargets-ordered: translationutils//$(MAKEFILE) FORCE
	cd translationutils/ && $(MAKE) -f $(MAKEFILE) install
sub-translationutils-install_subtargets: translationutils//$(MAKEFILE) FORCE
	cd translationutils/ && $(MAKE) -f $(MAKEFILE) install
sub-translationutils-uninstall_subtargets-ordered: translationutils//$(MAKEFILE) FORCE
	cd translationutils/ && $(MAKE) -f $(MAKEFILE) uninstall
sub-translationutils-uninstall_subtargets: translationutils//$(MAKEFILE) FORCE
	cd translationutils/ && $(MAKE) -f $(MAKEFILE) uninstall
medicalutils//$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) medicalutils/ || $(MKDIR) medicalutils/ 
	cd medicalutils/ && $(QMAKE) medicalutils.pro -unix -config debug -o $(MAKEFILE)
sub-medicalutils-qmake_all:  FORCE
	@$(CHK_DIR_EXISTS) medicalutils/ || $(MKDIR) medicalutils/ 
	cd medicalutils/ && $(QMAKE) medicalutils.pro -unix -config debug -o $(MAKEFILE)
sub-medicalutils: medicalutils//$(MAKEFILE) FORCE
	cd medicalutils/ && $(MAKE) -f $(MAKEFILE)
sub-medicalutils-make_default-ordered: medicalutils//$(MAKEFILE) sub-translationutils-make_default-ordered  FORCE
	cd medicalutils/ && $(MAKE) -f $(MAKEFILE) 
sub-medicalutils-make_default: medicalutils//$(MAKEFILE) FORCE
	cd medicalutils/ && $(MAKE) -f $(MAKEFILE) 
sub-medicalutils-make_first-ordered: medicalutils//$(MAKEFILE) sub-translationutils-make_first-ordered  FORCE
	cd medicalutils/ && $(MAKE) -f $(MAKEFILE) first
sub-medicalutils-make_first: medicalutils//$(MAKEFILE) FORCE
	cd medicalutils/ && $(MAKE) -f $(MAKEFILE) first
sub-medicalutils-all-ordered: medicalutils//$(MAKEFILE) sub-translationutils-all-ordered  FORCE
	cd medicalutils/ && $(MAKE) -f $(MAKEFILE) all
sub-medicalutils-all: medicalutils//$(MAKEFILE) FORCE
	cd medicalutils/ && $(MAKE) -f $(MAKEFILE) all
sub-medicalutils-clean-ordered: medicalutils//$(MAKEFILE) sub-translationutils-clean-ordered  FORCE
	cd medicalutils/ && $(MAKE) -f $(MAKEFILE) clean
sub-medicalutils-clean: medicalutils//$(MAKEFILE) FORCE
	cd medicalutils/ && $(MAKE) -f $(MAKEFILE) clean
sub-medicalutils-distclean-ordered: medicalutils//$(MAKEFILE) sub-translationutils-distclean-ordered  FORCE
	cd medicalutils/ && $(MAKE) -f $(MAKEFILE) distclean
sub-medicalutils-distclean: medicalutils//$(MAKEFILE) FORCE
	cd medicalutils/ && $(MAKE) -f $(MAKEFILE) distclean
sub-medicalutils-install_subtargets-ordered: medicalutils//$(MAKEFILE) sub-translationutils-install_subtargets-ordered  FORCE
	cd medicalutils/ && $(MAKE) -f $(MAKEFILE) install
sub-medicalutils-install_subtargets: medicalutils//$(MAKEFILE) FORCE
	cd medicalutils/ && $(MAKE) -f $(MAKEFILE) install
sub-medicalutils-uninstall_subtargets-ordered: medicalutils//$(MAKEFILE) sub-translationutils-uninstall_subtargets-ordered  FORCE
	cd medicalutils/ && $(MAKE) -f $(MAKEFILE) uninstall
sub-medicalutils-uninstall_subtargets: medicalutils//$(MAKEFILE) FORCE
	cd medicalutils/ && $(MAKE) -f $(MAKEFILE) uninstall
aggregation//$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) aggregation/ || $(MKDIR) aggregation/ 
	cd aggregation/ && $(QMAKE) aggregation.pro -unix -config debug -o $(MAKEFILE)
sub-aggregation-qmake_all:  FORCE
	@$(CHK_DIR_EXISTS) aggregation/ || $(MKDIR) aggregation/ 
	cd aggregation/ && $(QMAKE) aggregation.pro -unix -config debug -o $(MAKEFILE)
sub-aggregation: aggregation//$(MAKEFILE) FORCE
	cd aggregation/ && $(MAKE) -f $(MAKEFILE)
sub-aggregation-make_default-ordered: aggregation//$(MAKEFILE) sub-medicalutils-make_default-ordered  FORCE
	cd aggregation/ && $(MAKE) -f $(MAKEFILE) 
sub-aggregation-make_default: aggregation//$(MAKEFILE) FORCE
	cd aggregation/ && $(MAKE) -f $(MAKEFILE) 
sub-aggregation-make_first-ordered: aggregation//$(MAKEFILE) sub-medicalutils-make_first-ordered  FORCE
	cd aggregation/ && $(MAKE) -f $(MAKEFILE) first
sub-aggregation-make_first: aggregation//$(MAKEFILE) FORCE
	cd aggregation/ && $(MAKE) -f $(MAKEFILE) first
sub-aggregation-all-ordered: aggregation//$(MAKEFILE) sub-medicalutils-all-ordered  FORCE
	cd aggregation/ && $(MAKE) -f $(MAKEFILE) all
sub-aggregation-all: aggregation//$(MAKEFILE) FORCE
	cd aggregation/ && $(MAKE) -f $(MAKEFILE) all
sub-aggregation-clean-ordered: aggregation//$(MAKEFILE) sub-medicalutils-clean-ordered  FORCE
	cd aggregation/ && $(MAKE) -f $(MAKEFILE) clean
sub-aggregation-clean: aggregation//$(MAKEFILE) FORCE
	cd aggregation/ && $(MAKE) -f $(MAKEFILE) clean
sub-aggregation-distclean-ordered: aggregation//$(MAKEFILE) sub-medicalutils-distclean-ordered  FORCE
	cd aggregation/ && $(MAKE) -f $(MAKEFILE) distclean
sub-aggregation-distclean: aggregation//$(MAKEFILE) FORCE
	cd aggregation/ && $(MAKE) -f $(MAKEFILE) distclean
sub-aggregation-install_subtargets-ordered: aggregation//$(MAKEFILE) sub-medicalutils-install_subtargets-ordered  FORCE
	cd aggregation/ && $(MAKE) -f $(MAKEFILE) install
sub-aggregation-install_subtargets: aggregation//$(MAKEFILE) FORCE
	cd aggregation/ && $(MAKE) -f $(MAKEFILE) install
sub-aggregation-uninstall_subtargets-ordered: aggregation//$(MAKEFILE) sub-medicalutils-uninstall_subtargets-ordered  FORCE
	cd aggregation/ && $(MAKE) -f $(MAKEFILE) uninstall
sub-aggregation-uninstall_subtargets: aggregation//$(MAKEFILE) FORCE
	cd aggregation/ && $(MAKE) -f $(MAKEFILE) uninstall
extensionsystem//$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) extensionsystem/ || $(MKDIR) extensionsystem/ 
	cd extensionsystem/ && $(QMAKE) extensionsystem.pro -unix -config debug -o $(MAKEFILE)
sub-extensionsystem-qmake_all:  FORCE
	@$(CHK_DIR_EXISTS) extensionsystem/ || $(MKDIR) extensionsystem/ 
	cd extensionsystem/ && $(QMAKE) extensionsystem.pro -unix -config debug -o $(MAKEFILE)
sub-extensionsystem: extensionsystem//$(MAKEFILE) FORCE
	cd extensionsystem/ && $(MAKE) -f $(MAKEFILE)
sub-extensionsystem-make_default-ordered: extensionsystem//$(MAKEFILE) sub-aggregation-make_default-ordered  FORCE
	cd extensionsystem/ && $(MAKE) -f $(MAKEFILE) 
sub-extensionsystem-make_default: extensionsystem//$(MAKEFILE) FORCE
	cd extensionsystem/ && $(MAKE) -f $(MAKEFILE) 
sub-extensionsystem-make_first-ordered: extensionsystem//$(MAKEFILE) sub-aggregation-make_first-ordered  FORCE
	cd extensionsystem/ && $(MAKE) -f $(MAKEFILE) first
sub-extensionsystem-make_first: extensionsystem//$(MAKEFILE) FORCE
	cd extensionsystem/ && $(MAKE) -f $(MAKEFILE) first
sub-extensionsystem-all-ordered: extensionsystem//$(MAKEFILE) sub-aggregation-all-ordered  FORCE
	cd extensionsystem/ && $(MAKE) -f $(MAKEFILE) all
sub-extensionsystem-all: extensionsystem//$(MAKEFILE) FORCE
	cd extensionsystem/ && $(MAKE) -f $(MAKEFILE) all
sub-extensionsystem-clean-ordered: extensionsystem//$(MAKEFILE) sub-aggregation-clean-ordered  FORCE
	cd extensionsystem/ && $(MAKE) -f $(MAKEFILE) clean
sub-extensionsystem-clean: extensionsystem//$(MAKEFILE) FORCE
	cd extensionsystem/ && $(MAKE) -f $(MAKEFILE) clean
sub-extensionsystem-distclean-ordered: extensionsystem//$(MAKEFILE) sub-aggregation-distclean-ordered  FORCE
	cd extensionsystem/ && $(MAKE) -f $(MAKEFILE) distclean
sub-extensionsystem-distclean: extensionsystem//$(MAKEFILE) FORCE
	cd extensionsystem/ && $(MAKE) -f $(MAKEFILE) distclean
sub-extensionsystem-install_subtargets-ordered: extensionsystem//$(MAKEFILE) sub-aggregation-install_subtargets-ordered  FORCE
	cd extensionsystem/ && $(MAKE) -f $(MAKEFILE) install
sub-extensionsystem-install_subtargets: extensionsystem//$(MAKEFILE) FORCE
	cd extensionsystem/ && $(MAKE) -f $(MAKEFILE) install
sub-extensionsystem-uninstall_subtargets-ordered: extensionsystem//$(MAKEFILE) sub-aggregation-uninstall_subtargets-ordered  FORCE
	cd extensionsystem/ && $(MAKE) -f $(MAKEFILE) uninstall
sub-extensionsystem-uninstall_subtargets: extensionsystem//$(MAKEFILE) FORCE
	cd extensionsystem/ && $(MAKE) -f $(MAKEFILE) uninstall
utils//$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) utils/ || $(MKDIR) utils/ 
	cd utils/ && $(QMAKE) utils.pro -unix -config debug -o $(MAKEFILE)
sub-utils-qmake_all:  FORCE
	@$(CHK_DIR_EXISTS) utils/ || $(MKDIR) utils/ 
	cd utils/ && $(QMAKE) utils.pro -unix -config debug -o $(MAKEFILE)
sub-utils: utils//$(MAKEFILE) FORCE
	cd utils/ && $(MAKE) -f $(MAKEFILE)
sub-utils-make_default-ordered: utils//$(MAKEFILE) sub-extensionsystem-make_default-ordered  FORCE
	cd utils/ && $(MAKE) -f $(MAKEFILE) 
sub-utils-make_default: utils//$(MAKEFILE) FORCE
	cd utils/ && $(MAKE) -f $(MAKEFILE) 
sub-utils-make_first-ordered: utils//$(MAKEFILE) sub-extensionsystem-make_first-ordered  FORCE
	cd utils/ && $(MAKE) -f $(MAKEFILE) first
sub-utils-make_first: utils//$(MAKEFILE) FORCE
	cd utils/ && $(MAKE) -f $(MAKEFILE) first
sub-utils-all-ordered: utils//$(MAKEFILE) sub-extensionsystem-all-ordered  FORCE
	cd utils/ && $(MAKE) -f $(MAKEFILE) all
sub-utils-all: utils//$(MAKEFILE) FORCE
	cd utils/ && $(MAKE) -f $(MAKEFILE) all
sub-utils-clean-ordered: utils//$(MAKEFILE) sub-extensionsystem-clean-ordered  FORCE
	cd utils/ && $(MAKE) -f $(MAKEFILE) clean
sub-utils-clean: utils//$(MAKEFILE) FORCE
	cd utils/ && $(MAKE) -f $(MAKEFILE) clean
sub-utils-distclean-ordered: utils//$(MAKEFILE) sub-extensionsystem-distclean-ordered  FORCE
	cd utils/ && $(MAKE) -f $(MAKEFILE) distclean
sub-utils-distclean: utils//$(MAKEFILE) FORCE
	cd utils/ && $(MAKE) -f $(MAKEFILE) distclean
sub-utils-install_subtargets-ordered: utils//$(MAKEFILE) sub-extensionsystem-install_subtargets-ordered  FORCE
	cd utils/ && $(MAKE) -f $(MAKEFILE) install
sub-utils-install_subtargets: utils//$(MAKEFILE) FORCE
	cd utils/ && $(MAKE) -f $(MAKEFILE) install
sub-utils-uninstall_subtargets-ordered: utils//$(MAKEFILE) sub-extensionsystem-uninstall_subtargets-ordered  FORCE
	cd utils/ && $(MAKE) -f $(MAKEFILE) uninstall
sub-utils-uninstall_subtargets: utils//$(MAKEFILE) FORCE
	cd utils/ && $(MAKE) -f $(MAKEFILE) uninstall

Makefile: libs.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -unix -config debug -o Makefile libs.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
qmake: qmake_all FORCE
	@$(QMAKE) -unix -config debug -o Makefile libs.pro

qmake_all: sub-translationutils-qmake_all sub-medicalutils-qmake_all sub-aggregation-qmake_all sub-extensionsystem-qmake_all sub-utils-qmake_all FORCE

make_default: sub-translationutils-make_default-ordered sub-medicalutils-make_default-ordered sub-aggregation-make_default-ordered sub-extensionsystem-make_default-ordered sub-utils-make_default-ordered FORCE
make_first: sub-translationutils-make_first-ordered sub-medicalutils-make_first-ordered sub-aggregation-make_first-ordered sub-extensionsystem-make_first-ordered sub-utils-make_first-ordered FORCE
all: sub-translationutils-all-ordered sub-medicalutils-all-ordered sub-aggregation-all-ordered sub-extensionsystem-all-ordered sub-utils-all-ordered FORCE
clean: sub-translationutils-clean-ordered sub-medicalutils-clean-ordered sub-aggregation-clean-ordered sub-extensionsystem-clean-ordered sub-utils-clean-ordered FORCE
distclean: sub-translationutils-distclean-ordered sub-medicalutils-distclean-ordered sub-aggregation-distclean-ordered sub-extensionsystem-distclean-ordered sub-utils-distclean-ordered FORCE
	-$(DEL_FILE) Makefile
install_subtargets: sub-translationutils-install_subtargets-ordered sub-medicalutils-install_subtargets-ordered sub-aggregation-install_subtargets-ordered sub-extensionsystem-install_subtargets-ordered sub-utils-install_subtargets-ordered FORCE
uninstall_subtargets: sub-translationutils-uninstall_subtargets-ordered sub-medicalutils-uninstall_subtargets-ordered sub-aggregation-uninstall_subtargets-ordered sub-extensionsystem-uninstall_subtargets-ordered sub-utils-uninstall_subtargets-ordered FORCE

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all
install: install_subtargets  FORCE

uninstall:  uninstall_subtargets FORCE

FORCE:

