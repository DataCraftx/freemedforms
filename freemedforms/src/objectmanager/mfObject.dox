/**
 * \class mfObject
 * \~english This class owns all mecanism for :
              - the genealogy of mfObject,
              - the script engine (properties and functions associated with a mfObject),
              - the interpretation's function (into human language, into XML)
 *
 * \~french Cette classe offre tous les mécanisme pour :
             - la gestion de la généalogie d'un mfObject
             - le moteur de script (propriétés et fonctions associées à un mfObject)
             - les fonctions d'interprétation (en langage humain, en XML)
 *
*/

/**
 * \fn QString mfObject::toDebug() const
 * \~english Prepare a simple QString with minimal debugging information on mfObject.
 * \~french Prépare une simple QString avec les informations minimales de débuggage du mfObject.
*/

/**
 * \fn QDebug operator<<( QDebug dbg, const mfObject & c )
 * \~english qDebug quickly. qWarning() << m_Object outputs the toDebug() informations.
 * \~french qDebug rapidement. qWarning() << m_Object rapportera les informations de toDebug().
*/

/**
 * \fn QDebug operator<<( QDebug dbg, const mfObject * c )
 * \~english qDebug quickly. qWarning() << m_Object outputs the toDebug() informations.
 * \~french qDebug rapidement. qWarning() << m_Object rapportera les informations de toDebug().
*/


/**
 * \fn virtual QString mfObject::paramToFormXML( const QString & indent, const QString & key, const QVariant & val ) const

 * \~english Transform the mfObject into a fully XML form. This function is used for the form saving not the selected values of users saving. This function is only used by toXML().
 * \param indent : QString for indentation of XML code
 * \param key : QString for the XML tag
 * \param val : QVariant for the values to save (QString / QStringList)

 * \~french Transforme le mfObject en formulaire XML complet. Cette fonction est utilisée pour sauvegarder les formulaires pas les valeurs saisies par l'utilisateur. Cette fonction est uniquement utilisée par toXML().
 * \param indent : QString pour l'indentation du code XML
 * \param key : QString clé pour le tag XML à sauvegarder.
 * \param val : QVariant pour les valeurs à sauvegarder (QString / QStringList)

*/


/**
 * \fn virtual QString mfObject::toFormXML( int indent = 0 ) const

 * \~english Transform the mfObject into a fully XML form. This function is used for the form saving not the selected values of users saving. This function uses by paramToXML() for each elements.
 * \param indent : number of spaces for each indentation.

 * \~french Transforme le mfObject en formulaire XML complet. Cette fonction est utilisée pour sauvegarder les formulaires pas les valeurs saisies par l'utilisateur. Cette fonction utilise paramToXML() pour chaque élément.
 * \param indent : nombre d'espace pour chaque indentations.
*/


/**
 * \fn virtual void mfObject::setModified( const QVariant & state )

 * \~english Set this mfObject to modified = state. All his parents are concerned by this state's change.
 * \param state : modification's state

 * \~french Définit le mfObject à l'état de modification state. Tous ses parents seront concernés par ce changement d'état.
 * \param state : état de modification
*/

/**
 * \fn virtual bool mfObject::isModified() const
 * \~english Return the modification's state of the mfObject.
 * \~french Renvoie l'état de modification du mfObject.
*/

/**
 * \fn virtual QString mfObject::name() const
 * \~english Return the name of the mfObject. Used for the script engine (Property). This property cannot be translated.
 * \~french Renvoie le nom du mfObject. Utilisée par le moteur de script (Propriété). Cette propriété ne peut pas être traduite.
*/

/**
 * \fn virtual QString mfObject::label() const
 * \~english Return the translated label of the mfObject. Used for the script engine (Property).
 * \~french Renvoie le libellé traduit du mfObject. Utilisée par le moteur de script (Propriété).
*/

/**
 * \fn virtual QVariant mfObject::value() const
 * \~english Return the selected values or textedit content of the mfObject. Used for the script engine (Property).
 * \~french Renvoie les valeurs sélectionnées ou le contenu des textedit du mfObject. Utilisée par le moteur de script (Propriété).
*/

/**
 * \fn virtual bool mfObject::interpreted() const
 * \~english Return the interpreted state of the mfObject. Used for the script engine (Property).
 * \~french Renvoie l'état d'interprétation du mfObject. Utilisée par le moteur de script (Propriété).
*/

/**
 * \fn virtual void mfObject::setInterpreted( const QVariant & val )
 * \~english Define the interpreted state of the mfObject to val (must be bool). Used for the script engine (Property).
 * \~french Définit l'état d'interprétation du mfObject à val (qui doit être un booléen). Utilisée par le moteur de script (Propriété).
*/

/**
 * \fn virtual void mfObject::allChildInterpreted()
 * \~english Define the interpreted state of the mfObject and all his children to true. Used for the script engine (Property).
 * \~french Définit l'état d'interprétation du mfObject et de tous ses enfants à vraie. Utilisée par le moteur de script (Propriété).
*/

/**
 * \fn virtual void mfObject::resetInterpreted()
 * \~english Define the interpreted state of the mfObject and all his children to false. Used for the script engine (Property).
 * \~french Définit l'état d'interprétation du mfObject et de tous ses enfants à faux. Utilisée par le moteur de script (Propriété).
*/


/**
 * \fn virtual QString mfObject::interpretation()
 * \~english Return the interpreted value of the mfObject. Recursivly call his children interpretation. If a script is defined, execute the script and return de value returned by the script.
 * \~french Retourne la valeur de l'interprétation du mfObjecct. Ajoute de façon récursive l'interprétation des mfObject enfants. Si une valeur de script est définie, exécute le script et renvoie la valeur retournée par le script.
*/

/**
 * \fn virtual QVariant mfObject::sumOfChildren() const
 * \~english Return the sum of the selected numerical values.
 * \~french Retourne la somme des valeurs numériques sélectionnées.
*/

/**
 * \fn virtual QString mfObject::sumOfInterpretValues( const QString & separator ) const
 * \~english Return the joined string of the selected interpreted values.
 * \~french Retourne la somme des valeurs interprétées sélectionnées.
*/

/**
 * \fn virtual QString mfObject::sumOfCheckedLabels( const QString & separator ) const
 * \~english Return the joined string of the labels of the checked checkboxes.
 * \~french Retourne la somme des libellés des à case à cocher cochées.
*/

/**
 * \fn void mfObject::emitFormUiMustBeUpdated()
 * \~english Emit the signal formUiMustBeUpdated(). This function is used by addFile() when it needs to emit the signal by the root mfObject. FreeMedForms connects the signal of the root mfObject of the form to the function refreshWholeUi() which recalculate the form's widget.
 * \~french Emet le signal formUiMustBeUpdated(). Cette fonction est utilisée par addFile() quand elle doit émettre le signal depuis son mfObject racine. FreeMedForms connecte le signal du mfObject racine du formulaire à la fonction refreshWholeUi() qui recalcule l'affichage du formulaire.
*/

/**
 * \fn void mfObject::emitValueChanged()
 * \~english Emit the signal valueChanged() for this object and his parents recursively.
 * \~french Emet le signal valueChanged() pour cet objet et ses parents récursivement.
*/


/**
 * \fn bool mfObject::addFile( const QString & fileName )
 * \~english Function available for scripting. Adds a XML form file into the actual mfObject.
 * \~french Fonction de script. Ajoute le contenu d'un fichier formulaire XML au mfObject actuel.
*/

/**
 * \fn virtual QString mfObject::absoluteFileName() const
 * \~english Return the absoluteFileName of the XML form's file that has generated this mfObject.
 * \~french Renvoie le nom absolu du fichier XML formulaire qui a généré cet mfObject.
*/


